# ====================================================================
# Author: Lucas Berg
# Description: This example demonstrate how to load and solve a 
# custom mesh.
# ====================================================================
[main]
num_threads=1
dt_pde=0.02
simulation_time=500.0
abort_on_no_activity=false
use_adaptivity=false

[update_monodomain]
main_function=update_monodomain_default

[save_result]
print_rate=50
output_dir=./outputs/custom_mesh
main_function=save_as_vtu
init_function=init_save_as_vtk_or_vtu
end_function=end_save_as_vtk_or_vtu
save_pvd=true
file_prefix=V

[assembly_matrix]
init_function=set_initial_conditions_fvm
sigma_x=0.0001334
sigma_y=0.0001334
sigma_z=0.0001334
library_file=shared_libs/libdefault_matrix_assembly.so
main_function=homogeneous_sigma_assembly_matrix

[linear_system_solver]
tolerance=1e-16
use_preconditioner=no
use_gpu=yes
max_iterations=200
library_file=shared_libs/libdefault_linear_system_solver.so
main_function=conjugate_gradient
init_function=init_conjugate_gradient

[ode_solver]
dt=0.02
use_gpu=true
gpu_id=0
library_file=shared_libs/libten_tusscher_2006.so

[domain]
name=Custom Mesh
maximum_discretization = 1000.0
start_discretization = 500.0
x_domain_limit = 128000.0
y_domain_limit = 128000.0
z_domain_limit = 128000.0
number_of_points = 202358
main_function=initialize_grid_with_custom_mesh
mesh_file=meshes/one_ventricle.alg

[stim_base]
z_limit=1000.0
start = 0.0
duration = 2.0
current = -50.0
main_function= stim_if_z_less_than
